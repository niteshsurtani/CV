%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 14.000000 14.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.8.5 (Build 12F37) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 14 14
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 14 14
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: MyriadPro-Bold
%!FontType1-1.0: MyriadPro-Bold 2.000%%CreationDate: 9/30/13% Copyright �2003 Apple Computer, Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (2.000) readonly def/FullName (Myriad Pro Bold) readonly def/FamilyName (Myriad Pro) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -125 def/UnderlineThickness 112 defend readonly def/FontName /MyriadPro-Bold def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /H putdup 34 /N putreadonly def/FontBBox {-163 -250 1256 989} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BECF2E3C14A4A25ABB6822897674CC24BD7FFCD7B108877DB3F1D60870130F06D65FF41BB421AC1DCE1F855885F22B1B4AB74028A538F118CE3E6E55571217E0BFF45BCDCCA87FC89F6F5EEED38BBE54646BDFC7FCE957F724598D4EB0AAA3B6BA707705582FCFE1B880E364DCAB7B03E6AF7A2CE2EAFFF67A2CAE395896048824D43F94A24DC1FE02D718A391A33177EDD1F576A797D1EAA99C80C613E54EA13A4BD2BC80790A69A8490CE2449BFA88183E702B71437AEB558C593F1B7B2420B3BD6A232FF2C6B41CC80A562A6915162DFDC31E89BB227E5C2AC4B6E8D882116AEE558A8D7EC9EBA1835C080B673589C6B6FEA056710B831E2762B8B3DBA2CDFEB893FCE66F45AAA618B0C137978060AE05D69B4D71C55CB18A053D23108EE33C8AD43AFDA28968F00EB643CD3D4A79469385CC54259BFBCD3E9C1652BE4C422E0A09EF692792F56DB6FA22CE7E2ED2A7FF17B15248030108D24B49F01EA030F9C5669D671B2220851D4E706EC3C58276D6811DAFA63FBDE9A8ECB05B1B2DD678199847A64A9C0FD4E9BD6EA018E3F1C290310B9AA249971281D305B46CD2F856C868A7F0DD184E94BF569F6B5F00E76F2D4E46B35CED6B7BB1EDD22B4952AE9BE68BAB8770F36F52B7A2BEEF2B3F2B9DD175CF4CCD6F9DC1D48F2C14AC60F6660ACB33CE51D3CE08599F01A314125A1C2FFA51B8E3F51030347497AB145F9FCDEF4506DCCB08E1985F1BDB2C44A755E0A576AA9A54CC8211FC92829CF7552619ADC6C3C71AAC049BC63A4A9FB3724E3E6621B51BF82FEA1E5E7CC8372696E091D76764276039E3388A931105DC3A345EE7ED83AC929B30D4F51F98754190EEAC63C63CFE18A0C4149253116D1E61C4917F4D2773E2FCF9FD34EF5E49F7819230CCC3A5D3DAA8C0B44CE12E8B74A4A4811CCA7E59672036D9C1C413F2E0BCD12D615AFE1048E22AC7C42A0E116EB4445DBC13A84729255C1C313B67A5C27F76E1D1600EAFC6E0ADDFE81CDC08AC339E2B390E3C88F1875A24333A9FC88ECEF116975AB52C0B661D952B2033DAEBAF164833B4F7D73BB06E4D1E3B80AA28DCDC275B0DCA0627C7638BE6019F58AFC1966756D1BAE26DE6A5CAE77ABAE857E3B1EC748BC5D23C95C5337BC88E0D965D77CDDFB36C632CC2E2B53396ECA4801D81FF35C58DAEC647E406847FCD3B209D5C78A1CC11492EA3C7F20A7513376F819FF8C9B7CC1653DAB905606CD9E6017694ACA6889B2707B08589FB14A123E3E2B8A76EB1B8A7EA83C03CB3623601F4682129E318C864EE28CAA649A563AEF255679326C8362CD3EA2A610BC5D1F983E43F275E100FB8522A38CD2A1DD5395A23FE4E2F345AA114C7C834F7F2DACBCE42FDA5447D70CB8CAC1A6B76FC60AA9E17AF393921A28A14730D3F947349B2A004DA720BAC88349BA5F0512A05CBED6F2A5F432EA022278786E21F3B815DE1A9A9506F842AF953D8245465550EC281AB2A550E087FA8419EC74171181072994C744B9793F274F84BAFDB36BA348512DAB593CBBEB14725399BEE5B3FBDC524ADA7CB43D239C6608CE53955C1F17A666D00D7F34370DB0200F74D8CBFF00E5F8783D3A45B8292069384667C53EE65F8ACDD4B4BAB28C25F4C6C0F6B5609D67B12E742EE44963A4580D2BD8B89FB97264E1E43E0914C73ADD2EC27647D6FE9B34365B45059D9014B91ED34E3684C403E4D9986D1216542D09678569C7E545A0DD5744DAFA082EC267854C74D6FDF64396AD8809EB951A23E2971DAE987C23F2B0CDD80A5462786A8795C03DC50B1E721E26E80C8AFD2B0E13B77CD73BDD27DA581658DD6EF8BDBFE90F9E44ADCEC76E8E8974522920E515C36BFD9C41DBCF0FC5B009A45343B1DF38CC3E39747769FF4B2445263489D28A49551E29DF08A34E77E4309B4037157ECBBA572ABB9602FD9B1ED8536CDF42901865978B76034DB1D4F2CB24799207DB2B797E460CF465D9FAB86C6640EC35AEB68B28EFE5472903416472D41329481B24AD166CADE8D7520724D0F102EB393FDF89D26224B7A2A2081F3B5F1001267CDD324DA709A08EF16C218504A25ED3B03A7F61688D44E2A601DE36C0C0E9BEA98D0BB88513171CDCC785379FBADD1D2E41ACB53E766B82F629358D496A8A2E75D81B1EC10F70E299D1C8B4E74B0DEAE335F5AF7E5560DEF57C509C6291FBA60C7514A58F83EF3C5CD821B37376425BF2B9CB357F9BBE2E5F2011D64976BE4CE1BEBE1AC1684918458B0D87CBF76085A3D273DEA5F4C90F7DF1577E308D7BD41AFE740F2ECF23827C471AADAAF6DBCFF100F3723790229E9986C681851D9B3D3EA155AE791C485BEB437BBD5DF140912F8A7887D10647FBE444FBEC6459E9157BBECC4214E1BF14C78676DCB4DCDEF7EBC82A86234C097D111E6ED8A77AFC8A567485C17E3CF53C18A2BD223AA17305AC68F185C64266096B4CA4DD57B7187C84C960F2294B678EE9506B440C2C3F333F173AB1C09D6400F26BEA0C946C4EE7A56F917E4F3B95DE096F21D0660E503DD185ACE35611317C6B7514E8D1950EEBE2537E2719F59786186EF3D3E247A738975B0C4B0D7A93F3EAD3E8CACCE3CD332575D50D0E9E486778699F1EC348B31348882472060630C4B59E6576D3CDE9E0C327631064CAE42C85B927D974E137D5EC44D915FE37D5DEFA35A0228CA8DCE9D88D62FE45897A8797BB481AC016663F13C706013539F6DD34FB9E73E7EDD5A12CB395D75608EA9908D32F61DBAB4B0220EF66C63A627A3F261D29034FFB05946E22AAC12ECE73ACF34936C41B96CD7C133817B2F3F74F2FE22AB4F60B519DC0CEC61C9344CE19CE951883F46AB1DFE77C99130615D48354121561DFBE4A8FCAEAC5C2CBAA1C6B480D11D759B833B1D56B429E097D91DB8B30C575F0BE5E0D05EC51ABE3761526059AEF8047083AF34216004DFCF4180330CBCDD5A81728F2AD529CDE303B1AD36385351359998CF901C171BDF7614A123788B853D2292BBCEF6378260E626FA8AA8368BBAF973D91DF308C6A728738599AF790A636D057772E1C1EBBA7E34D59C157BB8DE74339DD29025F0C26A372E27FFEDAAF4FC48C7360FD6CA65E6E48658DB2B3D3A0736CD79D94F20BFDDD90533F9C36DB254C2805387612BFD7B47D88D786BDF9E54643DDA92072D595701144CF127031790672894DA330DC98801271D44A6F154209FC845B76F889309FA484A44570FFDFA1FF44746D203C71FD08836DB2ED97FB0B152B1FC1AAE064AD5ED981055B2B9A2040E4307D70BEE43EB548B39822BF2A95C0D565F76443E11420B70CF692AEFAAC2EAAE1580A5AF0AB12C9E6F444557DFC8550C3FE827D3A569B6D24FC06F0F42A28CE5658C02F8C3B393753AF4FD13E4333C9C164A991A2B86600222711A96BE7A761B23E9E86A4DD047B020B8469FCF7FBFC97DAEB4FF9997DDFB7CCD2F7611F8FD4C0916E537C45D1D8B9C890B0A8318C40B8342518D5F621CDDF98FF7FF7433F72653A2AFF9811191CB4098A7DB6262DBBC2CED4CDC3152402B9E0D7B27C4DBBA5A189F308B0D2D822EB78BB8BB506928C46DD6F9BBEF2E848A2B56A567589B72B5C446366B48849F02EA90AEF99C07D5963F9971C1219A4FE285F1F98A09ACBB546D764C38301157B61990B1650BE1FA014F8B7485618B0EEC03192BDB506C0CC661629AF1894A328503CB897498D8D13B81F2D911BCBA930C602AED14C9805A002967319B2DE37BC6378BFB26E5900B10514B2CD3D0EC2A48E07D96DFDF614C358884D5162B3222BFD430FA09BAE11012A29CE601A93CA43A88DDBFC1FF5DFFB95B1A77F84274113D8CE885A17702986A0D37BFB320A76A3AD0AF39DB0D45F8538875504A685863F5ED17157484C7FE304B338F71C032B1551F7F94393D1EF42EFC539F82DA4ACAA058A445D39272962DDD86561CACE84337D90C592AB481DD2A32D50ED41AB44A8B448507083016237019DF07816D5C0E3458B60B0EE312F25D3C846BE3176E5DB3A065FF9CC51737A31B13E02ADD9D2DF4E5B214827BC5790849B9C6373CB110CB16072B6EC7E337A41EE1600A70E32B5DB85216BAECCD8DCB8B300369DFAE474E4AC82E7FA99E51715D5561F498E9CBA2CB7D346258B1945E0BFF87F864DBA1B67C4B411BE5D6B8D33849DDA27ADE114341A6A3A250CAD7704F69DBBAA9756F671A90C09A03EC464F7E10B48B9FCD2462265460FF2A861FA114F30C45A07EA4B5F28751649CEBD88F54EA694EBC17BC94FFC9712FF5827B8CFAEC393417BC3A4D58CFAD7BEA85967075E9FD4B3B9710A651EF866CB41810D352A8BCE3E7F1BF7BBEA322A89F7EA12AE12B2DE556D1C9B13CBACB0B8C375E9EC43198EBCF42F2C77FEE36644C349DCE8E135AD6764B2EB7EDB968EAC6513BBF80CC85B9E18D9B67557C3696AC1D2A87F9AF5858A000ADE9639CA80F0C39C7AA2942CCC07C4AB671E729EE136B7D25D0E8BAFD4F071499E490A3E55EC0B3F2130D7E840CCB7497E99820A6A7222341BA1CEBD8FCA7A1750147B6081E710CDAC32DE68D56AC3DAF920CA3841499E7A6FC3A7E398F650D127E359F9A92141C4E8771321F8DDF47F2AB7D2C783D9ACCFCF268E306863556E8375E5F3E44B1670F71BDFB312BC69CC8FC24CD77839EB31280B6A847B796C7C193126030FD7B47E82EA92E68D1A8E511C22B6FE6B771BC1428B49D5DA9A308390036491FB60B2AE8B1704FBA6C8F68AB359D559B5703ADCEC78685F17CDD60F5744E740BEE02DBA47F5B3F47A61FA9ABF0245A11D0EFBD386E7889727A0717A1F6744FD992EEC68222014F907CABE8534F29E76308DCC9A1328D165FB0C32CBE7C046589F809D7CA31E9F9908F265FB41B89D02EEF89FCC4212B15946799CF0C5ACB290369F79913211EB1A9B05C8D2414337A92313DFFB3C5F886BAF046A88B61FC13AE009F1657236E81FC7DB9AFBF25FD0F3C177571D5D9EB1A201E96620D68922AFBF39D04ACC1E3DF115EC020F3B3DE2C6ACAB02EBC414436E6E1E8CBCC9CA61DB0A7810EDE062596AF081CFD35BE5CD45F48105856E625E3FF8C0BB1AFA7D3D6190258C095241F52D35A2A5946F2C9A990A2A5967C365F62108FE41E4B7A3CDB007766025F055E806FE17018EC973C3039C78793C205AB86C8B55DDE2D0BAF2CF0F3ABE91C503061D4C4AD4B7CC893F8FC6D25864E4AF624CA577556B39A313F8FCECB8FB4A7776981FF306455EEA55192F3BEFBCB71DA93A60F75101B33F9173DD985534E94609ACD274FFE43539CA90659E154BCB1E2D66F803FDEC4D23E1C34D45FE25FE21EA96D07C9353971E807688E7B36C70F83FF2A6479D5E2191507508BAF2F578CA0C09542F0410089EA90D7843EDBBD5D2791327CCABB97E53BD477AFE70689EE26A744638C25C7BE7A7EFEB6F7F42EA45BE6E154BC284CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4461FC6A467C8A69B9A9FBC10D44AC1B753D3147A64F5556788E29D4511E3711FE1C945A19BF35780D0D1F1DC1D8CE251BB38D9673A0881DF7F84A444764FC9AE6E29D3C239F1A68378DB466AC8B462C51154904D155AD1819566B34102C4A83BDF9E715AD5159159F6DB738B2C080D2B007D9430FE89CE590FECD82EA38AA74B490D221BFC0DCF2ACEE9542220664DAA59DED04F222C45E32EBAD268EF70613CE82310C549D1AD07B62B0CC37EE1A205732CDD541BAFFD8E9EF525F6C1C4EC99AF871AEF604DB68FA2025B6E4F0833B09AEFA4279EBCDB834479BF9F9348819DCB776B774B4CE6B7D134A3778600A92E7ECFAFB16911CFC3D1A2F0521E4E2AAD985269259669F5CF0E9D537CA884F7A8C3829760DF183D1BA4CE5E32A298EAB4DB3ABBF9471705C30C2CD90488C15F09C174AE5E6A6BDE414BE64FE9BDC55B5AFD12EF3FDF3182FE09C8A0E0F129CF6C0A075533AF38CA04CF4142CD513B84231F85DD6CE961E61C13D97422E2467A76ED3B4A5D726DD13CB38766BD2169A18CE313C90B2045AF5BC8FAB861721EA590FCE10AD7B33A430F33451C59D8CFDD95CA628AC193479B5A0322EAC44076F7FEC70AFF645F1E03A1ADA6B1B2D1395A48756BF091F10FADA63673E286A7904921F6FB21BE0EFD1920DB65DEE817EC0A9CB2F9A3A1A84BB52A38245499CA9EBFCFE1C90ED9306FBF24D7D500EEC6526F7A136044E3C9CABD73C93D45F1533D75747E52BD84156723D884E100BD8163D30C529CC542A241C3D4E16B4D4FAD8363DA76B9566B6ECE770458DE2DEFFEDE89D1682EB2E3D8119B98AF9A4EEB9AB44297FE7DD811013278006ED0F1D0B21DBBDE30A56271E6935A898FFA2E1FCC6164C6F171867A50770AD5F148ECEBC9E6575A06D967A8F5B2ADA024FB006B58FC22D69E081B12C1C1867CCEAAE4B5F613B89D205C80429E541FFC68C77FB0BAD9E5E85966B3C063051FAF7C154B4F62585FDBBC4D052B6CE32963843D68D36E06539C077731AA1B057FD7054E89F7D9745A4A39F4FC092F2B44E867AD0DF0D808C4FB22119090E232E855C81EF3036FAC31CE2D8FACFF18F8AD55D425A65C04475CB4B16F3752F703544057AA08BE5D17B7ED737270650888339E3814721DE88BFFBCDDDF645AE91CA6FACFAE883D3B940A463EDFF3C03F48BEFEF2D4887C207CCB4AAC359FEDD5A111124A2E4A3493A587BD6B91D02E3C5A90A8D9BD276E5454E1EB0F04EBB95A551CDE84BDEE63C4F18E1F744B9F2858ED1E24B34A92EFAD11130E38FFCCA0382B778E6CEC203AC5C7CA84A7813E218DB430297093228F2D643B73575C3DA761353051F29723D6CEFA4181EF6D9EF7FE078AC3C914A3CC5CF0FA0496EBF335FCA34D320C12D66F2405E015BC8555A90DC0126249B18FEC184478EA03369D308B731B2A07A621EFA54FF8AD2C47A039E09E8D1E058D7D27AFAF8B603A5DB59046CC66B9817107F8995A63EBDBCF33358BE7F0F60C92116FFCCAEAD05BEABCBB5DA4C3D434DDEE18638732408D2EEF87A0DB42A7BE56FEDD64F7D2DEDB932857848B25FCAFB894489C51ABD8D9E4C685E0D742588EF20E51220B657CD46EB901A08310A764139BB9C47BD5AEEE9540108E8B503F356245E7770B9223C45C1A9A698F71F5ACB9144B7B77D291D6532E3630E2C946E2900332B3623C089AA5B6B9443F13B2EB7C9B70F5BA04FFCB02B921946DBCA105E3F0761C7913699B851B0F7A24A77141AD7F3BD3533A7C6F3B84FBF695C2615CFA056672E5D2730F11A0B3F541D1922F8E501A91009492BD1A46DB76FBFF27F8619F4303EB0E2BEA7B98D8D2C10DB795B16A0EDDBFDA51B817CF8C299A06A62B1F24E010B2012B6F31595C2F9188BFFCCDDD1E06B494E10A053F384CB396F7C3A5BF0AC335B333E2AA1D523A24F1264377A103DB6EDC60B506B7E4B2C2E96452CEB5CC6EF693020B62337F05A06DBEE2EA2EA887F64433075B0BE818F88EB1DB098B0D436F0D67F0CC0E7491C9410B4BFFFF56453C3DCB4032AB2D2633D8A3EAD4FE846BD7466C5215A22B0230732D3300D66FDF9EE2433EA7A5A67E5E1199E710A726DC9C0F971B7609CC4ADF9761A7410B9D1AFFC7BF8CA3209E83C3FCC8A2AF4261D38004FBAE43BB764A47A50CA220BF97FDD993607829A108738FA5159CE3DC7FEC29EDE481150C18AFFF3ACAE53B9DF36228678479781910115344D09ECE05D3F4C473C10C34BC0B572D1D8ED80E39E58A83B6C51428310C07E8D7444A1E4FC5E4B8829A7416E91E515D9DF6B7EFF0A505F28EB6861C496E441E0843878EC497584E26917D15D5C60D5051B15468676054C6DB9B818F8A41CB01AEDEF6D6EA9362AE87A2AD06A1CBDD3DC970C65F9C1C54F6E907D391BA12060F9366A9D85095C566460FF84297A433280E9CEE0EE7BD6BFF2980C9F8917FD045E596CD32DC33C0AF8D2A1C8C8763EF81FD06659F12E45DF455E96A43245DC688218415D2FB4C744778A4E1B3C4239CA101A198B27D2616D3681FEAA66BA6007B965F27E30E27FA7E755131A3D6FB720CE3770362030674B95B66BC03ED15CAAE81F2EBEB273FC6C6FDB822FB3A46DF94C51FFA5957D46233161006E6F137A192BE23157845AE7F52ED76C937BDBC0997604DFCD62C3BB19A22515D980DFD0046D4575B36A3BD6DFED9BC310432A4287E3C42EFD86C56007253D3A62CF4B2481E53FE04E6802EAC46A035AA67F8FDC517DB990F834EA5E1F4FC1A5BB2A6CFC10448F9A6F99FC48549E35BCA011CFFE4CE4B0BFA4B5028811DEAEF9BDD2CBEA5707EA23064ED129FEDC4FE24714CBA54BA2E5A4C3BC794DA284282B9928FDE840E420F40F6C8D14FADC3C7097A2545050B13BD257CFDC6514D3E217F0E965933D6E7C9DFE2FB111B61C8C104CEB3F6B58479B8E643B13A8C832E3B58920E7BA58129C9B2E5D157F98FE762FECA54E6D14AF23D4DF0D693DBD162299ED4E11F83997A42CC5D3596BB67334B0B25FE1EF08DBB9209D0E16D51BBBD253239D7D3269A5A4C1C8EAAB9AFEC3FCD741CAD4AFD8265AFDEEAD4D908372B361206080262C0D9BE2C7CFA0A04DD3FEE458A924CBDD8391CBBB541A839BE75EEF8ADDAAA06DE221DE4B4F3A8B19F65E7CABD6452B9D9A3B774CCE02909584261DA6FF91FF2CB3C6074D4E86A24400AF8A8819B6620C88AC1B10BFBD87FDDE95490801FA5C5789EADD44537CEA8742BD3E885E7F93B35644E9211EA4B0314D44098B98D0FB80EE98BD2D30046A2EB7C7755E0930AF640A3126C30C78E32D924116240B2BD6EA11299369966BD6CE4180C8EC9650119B5924278688C1B53E08F239790A465AFBC38FC43CA4F59B3F3E0D5498260C8D8C880F27EE6D8513311BC46E0D00D2CEF6D3CBD90EB74699CAEE96E61A779A24EC906BE451BBA6D091ECE7757966C46BBA4BE885DDC06F982EEE0902DD9F225BF3BC626944867DBDE527F318872A97766C345267FD53371A886E0EBD87836D6753FF1AAA23B9B0F206AA8DA179C01F679762EBC272B545A6FB0123954793DC92E3F223DC0DC70BD3E35D88C7298C70BB829E95CA0A0965C21720B83B33B6B074E551694CF89A2C544E152E9CDB55559E1DCF4E958930AEC40D08DB87610487E79A98A4A0AF5E0FEDCB5C3E86F16F5EE9B4C981375E423816607139D816B395135AB522D10D1CBA2F3013CD07986545414DBBCFE1B942A777312D3CFA4A696DF2B00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/MyriadPro-Bold cguidfix
/F1.1/MyriadPro-Bold renmfont
%%EndPageSetup
0.60000002 i
0 0.708 0.85299999 0 setcmykcolor
q
0 0 14 14 rc
12.833333 3.7017543 m
12.833333 2.2097106 11.623623 1 10.131578 1 c
2.7017543 1 l
1.2097105 1 0 2.2097106 0 3.7017543 c
0 11.131578 l
0 12.623623 1.2097105 13.833333 2.7017543 13.833333 c
10.131578 13.833333 l
11.623623 13.833333 12.833333 12.623623 12.833333 11.131578 c
h
12.833333 3.7017543 m
f
0 0 0 0 setcmykcolor
0 i
1 0 0 -1 7.0416441 5.6875 cm
/F1.1[ 7 0 0 -7 0 0]sf
-5.3335052 1 m
(!")[ 4.963000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
